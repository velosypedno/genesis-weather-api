services:
  postgres-weather:
    image: postgres:latest
    container_name: postgres-weather
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres-data:/var/lib/postgresql/data     
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 2s
      retries: 4
  api-weather:
    build: .
    container_name: api-weather
    ports:
      - "8080:8080"
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_DRIVER: ${DB_DRIVER}
      WEATHER_API_KEY: ${WEATHER_API_KEY}
    depends_on:
      postgres-weather:
        condition: service_healthy
  
volumes:
  postgres-data: